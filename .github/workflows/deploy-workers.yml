name: Deploy Cloudflare Workers

on:
  push:
    branches:
      - main
    paths:
      - 'mainnet/**'
      - 'baklava/**'
      - 'alfajores/**'
      - 'health-check-worker.js'
      - 'health-check-worker-wrangler.toml'
      - '.github/workflows/deploy-workers.yml'
  workflow_dispatch:  # Allow manual triggering

jobs:
  deploy-rpc-workers:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        network: [mainnet, baklava, alfajores]
        include:
          - network: mainnet
            route: rpc.celo-community.org/*
            # Optional: Use separate KV namespaces for each network
            # kv_id: ${{ secrets.MAINNET_HEALTH_KV_ID }}
            # kv_preview_id: ${{ secrets.MAINNET_HEALTH_KV_PREVIEW_ID }}
          - network: baklava
            route: baklava-rpc.celo-community.org/*
            # kv_id: ${{ secrets.BAKLAVA_HEALTH_KV_ID }}
            # kv_preview_id: ${{ secrets.BAKLAVA_HEALTH_KV_PREVIEW_ID }}
          - network: alfajores
            route: alfajores-rpc.celo-community.org/*
            # kv_id: ${{ secrets.ALFAJORES_HEALTH_KV_ID }}
            # kv_preview_id: ${{ secrets.ALFAJORES_HEALTH_KV_PREVIEW_ID }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install -g wrangler

      - name: Deploy Worker for ${{ matrix.network }}
        working-directory: ${{ matrix.network }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          HEALTH_KV_ID: ${{ secrets.HEALTH_KV_ID }}
          HEALTH_KV_PREVIEW_ID: ${{ secrets.HEALTH_KV_PREVIEW_ID }}
        run: |
          # Replace environment variables in wrangler.toml
          sed -i "s/\$CLOUDFLARE_ACCOUNT_ID/${{ secrets.CLOUDFLARE_ACCOUNT_ID }}/g" wrangler.toml
          sed -i "s/\$CLOUDFLARE_ZONE_ID/${{ secrets.CLOUDFLARE_ZONE_ID }}/g" wrangler.toml
          sed -i "s|route = \".*\"|route = \"${{ matrix.route }}\"|g" wrangler.toml
          sed -i "s/\$HEALTH_KV_ID/$HEALTH_KV_ID/g" wrangler.toml
          sed -i "s/\$HEALTH_KV_PREVIEW_ID/$HEALTH_KV_PREVIEW_ID/g" wrangler.toml
          # Verify that the KV namespace binding is present in wrangler.toml
          if ! grep -q "binding = \"HEALTH_KV\"" wrangler.toml; then
            echo "Adding HEALTH_KV binding to wrangler.toml..."
            echo "" >> wrangler.toml
            echo "# KV namespace for tracking backend health status" >> wrangler.toml
            echo "[[kv_namespaces]]" >> wrangler.toml
            echo "binding = \"HEALTH_KV\"" >> wrangler.toml
            echo "id = \"$HEALTH_KV_ID\"" >> wrangler.toml
            echo "preview_id = \"$HEALTH_KV_PREVIEW_ID\"" >> wrangler.toml
          fi
          
          # Verify that the service binding is present in wrangler.toml
          if ! grep -q "binding = \"HEALTH_CHECK_WORKER\"" wrangler.toml; then
            echo "Adding HEALTH_CHECK_WORKER binding to wrangler.toml..."
            echo "" >> wrangler.toml
            echo "# Service binding for direct communication with the health check worker" >> wrangler.toml
            echo "[[services]]" >> wrangler.toml
            echo "binding = \"HEALTH_CHECK_WORKER\"" >> wrangler.toml
            echo "service = \"celo-health-check\"" >> wrangler.toml
            echo "environment = \"production\"" >> wrangler.toml
          fi
          
          # Deploy the worker
          wrangler deploy

  deploy-health-check-worker:
    runs-on: ubuntu-latest
    needs: deploy-rpc-workers
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install -g wrangler

      - name: Deploy Health Check Worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          HEALTH_KV_ID: ${{ secrets.HEALTH_KV_ID }}
          HEALTH_KV_PREVIEW_ID: ${{ secrets.HEALTH_KV_PREVIEW_ID }}
          STATIC_CONTENT_KV_ID: ${{ secrets.STATIC_CONTENT_KV_ID }}
          STATIC_CONTENT_KV_PREVIEW_ID: ${{ secrets.STATIC_CONTENT_KV_PREVIEW_ID }}
        run: |
          # Create a site directory for the health check worker
          mkdir -p site
          
          # Copy validator-addresses.json files to the site directory
          for network in mainnet baklava alfajores; do
            if [ -f "$network/validator-addresses.json" ]; then
              mkdir -p site/$network
              cp $network/validator-addresses.json site/$network/
              echo "Copied $network/validator-addresses.json to site/$network/"
              
              # Also upload validator addresses directly to the KV store
              echo "Uploading validator addresses for $network to STATIC_CONTENT_KV..."
              
              # Install jq for JSON processing
              sudo apt-get update && sudo apt-get install -y jq
              
              # Upload the entire validator-addresses.json file to the STATIC_CONTENT_KV namespace
              echo "Uploading $network/validator-addresses.json to STATIC_CONTENT_KV"
              wrangler kv:key put --namespace-id=$STATIC_CONTENT_KV_ID "$network/validator-addresses.json" "$(cat $network/validator-addresses.json)"
            else
              echo "Warning: $network/validator-addresses.json not found"
            fi
          done
          
          # Replace environment variables in wrangler.toml
          sed -i "s/\$CLOUDFLARE_ACCOUNT_ID/${{ secrets.CLOUDFLARE_ACCOUNT_ID }}/g" health-check-worker-wrangler.toml
          sed -i "s/\$HEALTH_KV_ID/$HEALTH_KV_ID/g" health-check-worker-wrangler.toml
          sed -i "s/\$HEALTH_KV_PREVIEW_ID/$HEALTH_KV_PREVIEW_ID/g" health-check-worker-wrangler.toml
          sed -i "s/\$STATIC_CONTENT_KV_ID/$STATIC_CONTENT_KV_ID/g" health-check-worker-wrangler.toml
          sed -i "s/\$STATIC_CONTENT_KV_PREVIEW_ID/$STATIC_CONTENT_KV_PREVIEW_ID/g" health-check-worker-wrangler.toml
          
          # Deploy the health check worker
          wrangler deploy -c health-check-worker-wrangler.toml